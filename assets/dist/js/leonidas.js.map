{"version":3,"file":"/js/leonidas.js","mappings":"mGAAaA,EAAW,CAEpBC,eAAgBC,SAASC,cAAc,gCACvCC,iBAAkBF,SAASC,cAAc,kCACzCE,kBAAmBH,SAASC,cAAc,mCAE1CG,oBAAqBJ,SAASC,cAAc,yCAC5CI,qBAAsBL,SAASC,cAAc,sCAC7CK,qBAAsBN,SAASO,iBAAiB,uCAGhDC,eAAgBR,SAASO,iBAAiB,mBAC1CE,WAAYT,SAASO,iBAAiB,8BCD1CG,OAAOC,MADO,GDcQ,gBCXlBD,OAAOE,UAGPd,EAAAA,qBAAAA,iBAA+C,SAAS,SAAUe,GAC9D,GAAIA,EAAEC,OAAOC,QAAQC,yBAA0B,CAC3CH,EAAEI,iBAIEP,OAAOQ,QAFe,4JAGtBlB,SAASmB,eAAeN,EAAEC,OAAOC,QAAQC,0BAA0BI,aAM/EtB,EAAAA,kBAAAA,iBAA4C,SAAS,SAAUe,GAC3DA,EAAEI,iBC1B+B,WAErC,IAAII,EAAWvB,EAAAA,iBAAAA,MAEf,GAAKuB,EAAL,CAKA,IACIC,EAAeD,EAASE,cAAcC,QADjB,eAC6C,IACtEF,EAAeD,EAGf,IAAII,EAAc3B,EAAAA,oBAAAA,WAAuC,GAEzD2B,EAAYC,GAAKD,EAAYV,QAAQY,SAASH,QAAQ,kBAAmBF,GACzEG,EAAYG,gBAAgB,UAC5BH,EAAYG,gBAAgB,kBAE5BH,EAAYlB,iBAAiB,KAAKsB,SAAQ,SAAAC,GAEtCA,EAAQC,WAAWF,SAAQ,SAAAG,GACA,IAAnBA,EAAMC,WACND,EAAME,YAAcF,EAAME,YAAYV,QAAQ,mBAAoBH,OAItES,EAAQK,WAAWC,OAAS,GAC5BC,MAAMC,KAAKR,EAAQK,YAAYN,SAAQ,SAAAU,GACnCA,EAAKC,MAAQD,EAAKC,MAAMhB,QAAQ,kBAAmBF,GACnDiB,EAAKC,MAAQD,EAAKC,MAAMhB,QAAQ,mBAAoBH,MAIxDS,EAAQW,aAAa,aACrBX,EAAQF,gBAAgB,eAgChC9B,EAAAA,qBAAAA,sBAAoD,YAAa2B,GACjE3B,EAAAA,iBAAAA,MAAkC,ID1C9B4C,Q","sources":["webpack:///./src/js/views/base.js","webpack:///./src/js/index.js","webpack:///./src/js/views/metaBoxView.js"],"sourcesContent":["export const elements = {\r\n    // Metabox\r\n    newPlatformDiv: document.querySelector('#leonidas--new_platform--div'),\r\n    newPlatformInput: document.querySelector('#leonidas--new_platform--input'),\r\n    newPlatformButton: document.querySelector('#leonidas--new_platform--submit'),\r\n\r\n    platfromUrlTemplate: document.querySelector('#leonidas--platform_url--dummy_markup'),\r\n    platformUrlContainer: document.querySelector('#leonidas--platform_url--container'),\r\n    platformUrlDeleteBtn: document.querySelectorAll('#leonidas--platform_url--delete_btn'),\r\n\r\n    // Sortable Object\r\n    positionValues: document.querySelectorAll('.position-value'),\r\n    sortableLi: document.querySelectorAll('.sortable--item-container')\r\n};\r\n\r\nexport const elementStrings = {\r\n\r\n};\r\n\r\nexport const jQueryElements = {\r\n\r\n};\r\n\r\nexport const wpPages = {\r\n    editPostLocation: 'ba_location',\r\n};","import MetaBox from './models/MetaBox';\r\nimport * as metaBoxView from './views/metaBoxView';\r\nimport {\r\n    elements,\r\n    jQueryElements,\r\n    wpPages\r\n} from \"./views/base\";\r\n\r\n// window.elements = elements;\r\n\r\nconst state = {};\r\nwindow.state = state;\r\n\r\nif (window.pagenow === wpPages.editPostLocation) {\r\n\r\n    // Remove Platfrom url input from DOM and thusly POST\r\n    elements.platformUrlContainer.addEventListener('click', function (e) {\r\n        if (e.target.dataset.leonidasLocationPlatform) {\r\n            e.preventDefault();\r\n\r\n            let confirmationMessage = \"Are you sure you want to remove this platform? If you save after removing it, the url associated with it for this location will be permanantly deleted.\";\r\n\r\n            if (window.confirm(confirmationMessage)) {\r\n                document.getElementById(e.target.dataset.leonidasLocationPlatform).remove();\r\n            }\r\n        }\r\n    });\r\n\r\n    // Insert new Platform url input\r\n    elements.newPlatformButton.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        metaBoxView.insertNewPlatformUrlInput();\r\n    });\r\n\r\n}","import {\r\n    elements\r\n} from './base';\r\n\r\nexport const insertNewPlatformUrlInput = () => {\r\n\r\n    let platform = elements.newPlatformInput.value;\r\n\r\n    if (!platform) {\r\n        return;\r\n    }\r\n\r\n    // band-aid af find better solution\r\n    let wpSanitizeKeyRegex = /[^a-z0-9_\\-]/\r\n    let platformSlug = platform.toLowerCase().replace(wpSanitizeKeyRegex, '');\r\n    platformSlug = platform;\r\n\r\n    // Container\r\n    let newPlatform = elements.platfromUrlTemplate.cloneNode(true);\r\n    //   let newPlatformId = ;\r\n    newPlatform.id = newPlatform.dataset.idFormat.replace('%platform_name%', platformSlug);\r\n    newPlatform.removeAttribute('hidden');\r\n    newPlatform.removeAttribute('data-id-format');\r\n\r\n    newPlatform.querySelectorAll('*').forEach(element => {\r\n\r\n        element.childNodes.forEach(child => {\r\n            if (child.nodeType === 3) {\r\n                child.textContent = child.textContent.replace('%platform_title%', platform);\r\n            }\r\n        })\r\n\r\n        if (element.attributes.length > 0) {\r\n            Array.from(element.attributes).forEach(attr => {\r\n                attr.value = attr.value.replace('%platform_name%', platformSlug);\r\n                attr.value = attr.value.replace('%platform_title%', platform);\r\n            })\r\n        }\r\n\r\n        if (element.hasAttribute('disabled')) {\r\n            element.removeAttribute('disabled');\r\n        }\r\n\r\n    })\r\n\r\n    //    Label\r\n    //   let label = newPlatform.querySelector('label');\r\n    //   let labelFor = label.getAttribute('for').replace('%platform_name%', platformSlug);\r\n    //   label.textContent = platform;\r\n    //   label.setAttribute('for', labelFor);\r\n\r\n    //    Text Input\r\n    //   let input = newPlatform.querySelector('input');\r\n    //   Array.from(input.attributes).forEach(attr => {\r\n    //     attr.value = attr.value.replace('%platform_name%', platformSlug);\r\n    //   });\r\n    //   input.removeAttribute('disabled');\r\n\r\n    //    Delete Button\r\n    //   let deleteButton = newPlatform.querySelector('[value=\"Remove\"]');\r\n    //   Array.from(deleteButton.attributes).forEach(attr => {\r\n    //     attr.value = attr.value.replace('%platform_name%', platformSlug);\r\n    //   });\r\n\r\n    //    Hidden name=\"tax_input...\" Input\r\n    //   let hiddenTax = newPlatform.querySelector('[name=\"tax_input[ba_delivery_platforms][]\"]');\r\n    //   let hiddenTaxVal = hiddenTax.getAttribute('value').replace('%platform_title%', platform);\r\n    //   hiddenTax.removeAttribute('disabled');\r\n    //   hiddenTax.setAttribute('value', hiddenTaxVal);\r\n\r\n    //   console.log(newPlatform);\r\n\r\n    elements.platformUrlContainer.insertAdjacentElement('beforeend', newPlatform);\r\n    elements.newPlatformInput.value = '';\r\n}"],"names":["elements","newPlatformDiv","document","querySelector","newPlatformInput","newPlatformButton","platfromUrlTemplate","platformUrlContainer","platformUrlDeleteBtn","querySelectorAll","positionValues","sortableLi","window","state","pagenow","e","target","dataset","leonidasLocationPlatform","preventDefault","confirm","getElementById","remove","platform","platformSlug","toLowerCase","replace","newPlatform","id","idFormat","removeAttribute","forEach","element","childNodes","child","nodeType","textContent","attributes","length","Array","from","attr","value","hasAttribute","metaBoxView"],"sourceRoot":""}